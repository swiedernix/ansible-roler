---
kind: pipeline
name: testing

platform:
  os: linux
  arch: amd64

steps:
- name: python2.7
  pull: always
  image: python:2.7
  commands:
  - pip install --upgrade pip setuptools wheel virtualenv -q
  - virtualenv /env-test
  - "env /env-test/bin/pip install ${PYTHON_TEST} -q"
  - env /env-test/bin/pip install -e . -q
  - env /env-test/bin/pytest --cov=ansibleroler tests/ -v
  - virtualenv /env-lint
  - "env /env-lint/bin/pip install ${PYTHON_LINT} -q"
  - env /env-lint/bin/flake8 ansibleroler
  environment:
    PYTHON_LINT: flake8 flake8-colors pep8-naming
    PYTHON_TEST: pytest pytest-cov pytest-mock
  depends_on:
  - clone

- name: python3.4
  pull: always
  image: python:3.4
  commands:
  - pip install --upgrade pip setuptools wheel virtualenv -q
  - virtualenv /env-test
  - "env /env-test/bin/pip install ${PYTHON_TEST} -q"
  - env /env-test/bin/pip install -e . -q
  - env /env-test/bin/pytest --cov=ansibleroler tests/ -v
  - virtualenv /env-lint
  - "env /env-lint/bin/pip install ${PYTHON_LINT} -q"
  - env /env-lint/bin/flake8 ansibleroler
  environment:
    PYTHON_LINT: flake8 flake8-colors pep8-naming
    PYTHON_TEST: pytest pytest-cov pytest-mock
  depends_on:
  - clone

- name: python3.5
  pull: always
  image: python:3.5
  commands:
  - pip install --upgrade pip setuptools wheel virtualenv -q
  - virtualenv /env-test
  - "env /env-test/bin/pip install ${PYTHON_TEST} -q"
  - env /env-test/bin/pip install -e . -q
  - env /env-test/bin/pytest --cov=ansibleroler tests/ -v
  - virtualenv /env-lint
  - "env /env-lint/bin/pip install ${PYTHON_LINT} -q"
  - env /env-lint/bin/flake8 ansibleroler
  environment:
    PYTHON_LINT: flake8 flake8-colors pep8-naming
    PYTHON_TEST: pytest pytest-cov pytest-mock
  depends_on:
  - clone

- name: python3.6
  pull: always
  image: python:3.6
  commands:
  - pip install --upgrade pip setuptools wheel virtualenv -q
  - virtualenv /env-test
  - "env /env-test/bin/pip install ${PYTHON_TEST} -q"
  - env /env-test/bin/pip install -e . -q
  - env /env-test/bin/pytest --cov=ansibleroler tests/ -v
  - virtualenv /env-lint
  - "env /env-lint/bin/pip install ${PYTHON_LINT} -q"
  - env /env-lint/bin/flake8 ansibleroler
  environment:
    PYTHON_LINT: flake8 flake8-colors pep8-naming
    PYTHON_TEST: pytest pytest-cov pytest-mock
  depends_on:
  - clone

- name: python3.7
  pull: always
  image: python:3.7
  commands:
  - pip install --upgrade pip setuptools wheel virtualenv -q
  - virtualenv /env-test
  - "env /env-test/bin/pip install ${PYTHON_TEST} -q"
  - env /env-test/bin/pip install -e . -q
  - env /env-test/bin/pytest --cov=ansibleroler tests/ -v
  - virtualenv /env-lint
  - "env /env-lint/bin/pip install ${PYTHON_LINT} -q"
  - env /env-lint/bin/flake8 ansibleroler
  environment:
    PYTHON_LINT: flake8 flake8-colors pep8-naming
    PYTHON_TEST: pytest pytest-cov pytest-mock
  depends_on:
  - clone

trigger:
  branch:
  - master

---
kind: pipeline
name: build

platform:
  os: linux
  arch: amd64

steps:
- name: build
  pull: always
  image: python:3.7
  commands:
  - python setup.py sdist bdist_wheel

- name: checksum
  pull: always
  image: alpine
  commands:
  - apk add --no-cache coreutils
  - "sha256sum -b dist/* > sha256sum.txt"
  when:
    event:
    - push
    - tag

- name: gpg-sign
  pull: always
  image: plugins/gpgsign:1
  settings:
    detach_sign: true
    files:
    - "dist/*"
    key:
      from_secret: gpgsign_key
    passphrase:
      from_secret: gpgsign_passphrase

- name: publish-github
  pull: always
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    files:
    - "dist/*"
    - sha256sum.txt
  when:
    event:
    - tag

trigger:
  branch:
  - master

depends_on:
- testing

...
